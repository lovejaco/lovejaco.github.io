<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>http on syyim</title>
    <link>https://lovejaco.github.io/tags/http/</link>
    <description>syyim (http)</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 06 May 2019 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://lovejaco.github.io/tags/http/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>http head of line blocking</title>
      <link>https://lovejaco.github.io/posts/head-of-line-blocking/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lovejaco.github.io/posts/head-of-line-blocking/</guid>
      <description>&lt;p&gt;팀 스터디 발표 시간에 관련 이슈가 언급되어, 보충 설명을 위해 작성된 게시물입니다.
HTTP2, HTTP3을 이해하는데 약간의 도움이 될 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;htt-1x&#34;&gt;HTT 1.x&lt;/h2&gt;
&lt;p&gt;모두 알고 있듯, HTTP는 비 연결성 프로토콜입니다. 많은 수의 리소스 요청을 처리하기 위해서 다수의 커넥션을 사용합니다. 그리고 &lt;a href=&#34;https://docs.pushtechnology.com/cloud/latest/manual/html/designguide/solution/support/connection_limitations.html&#34;&gt;브라우저의 동시 연결 제한&lt;/a&gt; 때문에 &lt;a href=&#34;https://developer.mozilla.org/ko/docs/Web/HTTP/Connection_management_in_HTTP_1.x&#34;&gt;도메인 샤딩&lt;/a&gt;이라는 기법을 추가로 사용하여 리소스 연결 속도를 개선하고 있습니다.
그러나 이런 순차적인 연결은 &lt;strong&gt;HTTP Head of line blocking&lt;/strong&gt; 이슈를 유발합니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;amp;fname=http%3A%2F%2Fcfile1.uf.tistory.com%2Fimage%2F26040A41593815B020B6F5&#34; alt=&#34;이미지 출처: https://img1.daumcdn.net&#34;&gt;&lt;/p&gt;
&lt;p&gt;특정 요청의 응답에 지연이 발생하면 그 다음의 요청에도 영향을 받는다는 문제 입니다.&lt;/p&gt;
&lt;h2 id=&#34;http-2&#34;&gt;HTTP 2&lt;/h2&gt;
&lt;p&gt;구글의 SPDY에서 유래되어 HTTP2 표준으로 명명&lt;br&gt;
HTTP2는 다음의 방법으로 이 문제를 해결합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;영속적인 커넥션 사용&lt;/li&gt;
&lt;li&gt;멀티플렉싱 - 여러 개의 HTTP 요청/응답을 하나의 TCP 연결에서 보냄.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://t1.daumcdn.net/cfile/tistory/251B0644593A20A918&#34; alt=&#34;이미지 출처: https://t1.daumcdn.net/cfile/tistory/251B0644593A20A918&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;http-3&#34;&gt;HTTP 3&lt;/h2&gt;
&lt;p&gt;그러나 HTT2는 여전히 다른 종류의 어려움을 겪고 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1400/1*9Y4-yxnqnhVZnnOIcuSohA.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;HTT2는 TCP를 사용하고 있기 때문에 만약 TCP 스트림에서 하나의 패킷이 손실된 경우 패킷이 재 전송 및 수신될 때까지 모든 스트림을 대기 시킵니다. 이를 &lt;strong&gt;TCP Head of line blocking&lt;/strong&gt;이라고 부릅니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lovejaco.github.io/images/quic-stack.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;
&lt;p&gt;HTTP3는 UDP를 이용하여 이 문제를 해결하며, TCP와 유사하게 구현된 QUIC 프로토콜을 이용하여 패킷의 순서와 신뢰를 보장합니다.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>